version: 2
jobs:
  test:
    docker:
    - image: node:8.11.3
    steps:
    - checkout
    - restore_cache:
        keys:
        - node-v2-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - node-v2-{{ .Branch }}-
        - node-v2-
    - run: |
        if [ -z "$SLACK_API_TOKEN" \
             -o -z "$SLACK_TEST_CONVERSATION_ID" \
             -o -z "$GITLAB_API_TOKEN" \
             -o -z "$GITLAB_PROJECT_ID" ]; then
          exit 0
        fi
        set -e
        npm install
        npm test
    - save_cache:
        paths:
        - node_modules/
        - /usr/local/lib/node_modules/
        key: node-v2-{{ .Branch }}-{{ checksum "package-lock.json" }}
  deploy:
    docker:
    - image: node:8.11.3
    steps:
    - checkout
    - restore_cache:
        keys:
        - node-v2-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - node-v2-{{ .Branch }}-
        - node-v2-
    - run: |
        if [ -z "$AWS_ACCESS_KEY_ID" \
             -o -z "$AWS_SECRET_ACCESS_KEY" \
             -o -z "$SLACK_API_TOKEN" \
             -o -z "$SLACK_CONVERSATION_ID" \
             -o -z "$GITLAB_API_TOKEN" \
             -o -z "$GITLAB_PROJECT_ID" \
             -o -z "$CRON_SCHEDULE" \
             -o -z "$STAGE_NAME" ]; then
          exit 0
        fi
        set -e
        npm install
        npm install -g serverless@1.28.0
        serverless deploy --stage $STAGE_NAME
    - save_cache:
        paths:
        - node_modules/
        - /usr/local/lib/node_modules/
        key: node-v2-{{ .Branch }}-{{ checksum "package-lock.json" }}
workflows:
  version: 2
  deploy:
    jobs:
    - test
    - deploy:
        requires:
        - test
